// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: api_gateway_kafka_events.proto

package kafka_message

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Kafka event for analysis started
type AnalysisStartedEvent struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	RequestId     string                                  `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	UserId        string                                  `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PythonVersion string                                  `protobuf:"bytes,3,opt,name=python_version,json=pythonVersion,proto3" json:"python_version,omitempty"`
	RepositoryUrl string                                  `protobuf:"bytes,4,opt,name=repository_url,json=repositoryUrl,proto3" json:"repository_url,omitempty"`
	Packages      []*AnalysisStartedEvent_RequiredPackage `protobuf:"bytes,5,rep,name=packages,proto3" json:"packages,omitempty"`
	Timestamp     *timestamppb.Timestamp                  `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalysisStartedEvent) Reset() {
	*x = AnalysisStartedEvent{}
	mi := &file_api_gateway_kafka_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalysisStartedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalysisStartedEvent) ProtoMessage() {}

func (x *AnalysisStartedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_kafka_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalysisStartedEvent.ProtoReflect.Descriptor instead.
func (*AnalysisStartedEvent) Descriptor() ([]byte, []int) {
	return file_api_gateway_kafka_events_proto_rawDescGZIP(), []int{0}
}

func (x *AnalysisStartedEvent) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AnalysisStartedEvent) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AnalysisStartedEvent) GetPythonVersion() string {
	if x != nil {
		return x.PythonVersion
	}
	return ""
}

func (x *AnalysisStartedEvent) GetRepositoryUrl() string {
	if x != nil {
		return x.RepositoryUrl
	}
	return ""
}

func (x *AnalysisStartedEvent) GetPackages() []*AnalysisStartedEvent_RequiredPackage {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *AnalysisStartedEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Kafka event for status updates
type AnalysisStatusEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Progress      int64                  `protobuf:"varint,4,opt,name=progress,proto3" json:"progress,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ServiceName   string                 `protobuf:"bytes,6,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalysisStatusEvent) Reset() {
	*x = AnalysisStatusEvent{}
	mi := &file_api_gateway_kafka_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalysisStatusEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalysisStatusEvent) ProtoMessage() {}

func (x *AnalysisStatusEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_kafka_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalysisStatusEvent.ProtoReflect.Descriptor instead.
func (*AnalysisStatusEvent) Descriptor() ([]byte, []int) {
	return file_api_gateway_kafka_events_proto_rawDescGZIP(), []int{1}
}

func (x *AnalysisStatusEvent) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AnalysisStatusEvent) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AnalysisStatusEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AnalysisStatusEvent) GetProgress() int64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *AnalysisStatusEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *AnalysisStatusEvent) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

type AnalysisStartedEvent_RequiredPackage struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PackageName    string                 `protobuf:"bytes,1,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	PackageVersion string                 `protobuf:"bytes,2,opt,name=package_version,json=packageVersion,proto3" json:"package_version,omitempty"`
	Extras         []string               `protobuf:"bytes,3,rep,name=extras,proto3" json:"extras,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AnalysisStartedEvent_RequiredPackage) Reset() {
	*x = AnalysisStartedEvent_RequiredPackage{}
	mi := &file_api_gateway_kafka_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalysisStartedEvent_RequiredPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalysisStartedEvent_RequiredPackage) ProtoMessage() {}

func (x *AnalysisStartedEvent_RequiredPackage) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_kafka_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalysisStartedEvent_RequiredPackage.ProtoReflect.Descriptor instead.
func (*AnalysisStartedEvent_RequiredPackage) Descriptor() ([]byte, []int) {
	return file_api_gateway_kafka_events_proto_rawDescGZIP(), []int{0, 0}
}

func (x *AnalysisStartedEvent_RequiredPackage) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *AnalysisStartedEvent_RequiredPackage) GetPackageVersion() string {
	if x != nil {
		return x.PackageVersion
	}
	return ""
}

func (x *AnalysisStartedEvent_RequiredPackage) GetExtras() []string {
	if x != nil {
		return x.Extras
	}
	return nil
}

var File_api_gateway_kafka_events_proto protoreflect.FileDescriptor

const file_api_gateway_kafka_events_proto_rawDesc = "" +
	"\n" +
	"\x1eapi_gateway_kafka_events.proto\x12\x18api_gateway_kafka_events\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa9\x03\n" +
	"\x14AnalysisStartedEvent\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12%\n" +
	"\x0epython_version\x18\x03 \x01(\tR\rpythonVersion\x12%\n" +
	"\x0erepository_url\x18\x04 \x01(\tR\rrepositoryUrl\x12Z\n" +
	"\bpackages\x18\x05 \x03(\v2>.api_gateway_kafka_events.AnalysisStartedEvent.RequiredPackageR\bpackages\x128\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1au\n" +
	"\x0fRequiredPackage\x12!\n" +
	"\fpackage_name\x18\x01 \x01(\tR\vpackageName\x12'\n" +
	"\x0fpackage_version\x18\x02 \x01(\tR\x0epackageVersion\x12\x16\n" +
	"\x06extras\x18\x03 \x03(\tR\x06extras\"\xdf\x01\n" +
	"\x13AnalysisStatusEvent\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x1a\n" +
	"\bprogress\x18\x04 \x01(\x03R\bprogress\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12!\n" +
	"\fservice_name\x18\x06 \x01(\tR\vserviceNameB@Z>github.com/0hJonny/python-deps-crawler/pkg/proto/kafka_messageb\x06proto3"

var (
	file_api_gateway_kafka_events_proto_rawDescOnce sync.Once
	file_api_gateway_kafka_events_proto_rawDescData []byte
)

func file_api_gateway_kafka_events_proto_rawDescGZIP() []byte {
	file_api_gateway_kafka_events_proto_rawDescOnce.Do(func() {
		file_api_gateway_kafka_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_gateway_kafka_events_proto_rawDesc), len(file_api_gateway_kafka_events_proto_rawDesc)))
	})
	return file_api_gateway_kafka_events_proto_rawDescData
}

var file_api_gateway_kafka_events_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_api_gateway_kafka_events_proto_goTypes = []any{
	(*AnalysisStartedEvent)(nil),                 // 0: api_gateway_kafka_events.AnalysisStartedEvent
	(*AnalysisStatusEvent)(nil),                  // 1: api_gateway_kafka_events.AnalysisStatusEvent
	(*AnalysisStartedEvent_RequiredPackage)(nil), // 2: api_gateway_kafka_events.AnalysisStartedEvent.RequiredPackage
	(*timestamppb.Timestamp)(nil),                // 3: google.protobuf.Timestamp
}
var file_api_gateway_kafka_events_proto_depIdxs = []int32{
	2, // 0: api_gateway_kafka_events.AnalysisStartedEvent.packages:type_name -> api_gateway_kafka_events.AnalysisStartedEvent.RequiredPackage
	3, // 1: api_gateway_kafka_events.AnalysisStartedEvent.timestamp:type_name -> google.protobuf.Timestamp
	3, // 2: api_gateway_kafka_events.AnalysisStatusEvent.timestamp:type_name -> google.protobuf.Timestamp
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_gateway_kafka_events_proto_init() }
func file_api_gateway_kafka_events_proto_init() {
	if File_api_gateway_kafka_events_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_gateway_kafka_events_proto_rawDesc), len(file_api_gateway_kafka_events_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_gateway_kafka_events_proto_goTypes,
		DependencyIndexes: file_api_gateway_kafka_events_proto_depIdxs,
		MessageInfos:      file_api_gateway_kafka_events_proto_msgTypes,
	}.Build()
	File_api_gateway_kafka_events_proto = out.File
	file_api_gateway_kafka_events_proto_goTypes = nil
	file_api_gateway_kafka_events_proto_depIdxs = nil
}
